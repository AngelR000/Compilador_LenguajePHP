/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package front;

import java.io.File;
import javax.swing.JOptionPane;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import lexico.AnalisisLexico;

/**
 *
 * @author rodriguez
 */
public class Principal extends javax.swing.JFrame {
    private editor Editor;
    private AnalisisLexico an = new AnalisisLexico();
    private int n=0;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnabrir = new javax.swing.JButton();
        tbnguardar = new javax.swing.JButton();
        btnguardar_como = new javax.swing.JButton();
        btnguardar_todo = new javax.swing.JButton();
        btncerrar = new javax.swing.JButton();
        btncerrar_todo = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        tpnFuentes = new javax.swing.JTabbedPane();
        tpnSalidas = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 350));

        jToolBar1.setRollover(true);

        btnNuevo.setText("Nuevo");
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnabrir.setText("Abrir");
        btnabrir.setFocusable(false);
        btnabrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnabrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnabrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnabrirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnabrir);

        tbnguardar.setText("Guardar");
        tbnguardar.setFocusable(false);
        tbnguardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbnguardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnguardarActionPerformed(evt);
            }
        });
        jToolBar1.add(tbnguardar);

        btnguardar_como.setText("Guardar como");
        btnguardar_como.setFocusable(false);
        btnguardar_como.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnguardar_como.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnguardar_como.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardar_comoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnguardar_como);

        btnguardar_todo.setText("Guardar todo");
        btnguardar_todo.setFocusable(false);
        btnguardar_todo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnguardar_todo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnguardar_todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardar_todoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnguardar_todo);

        btncerrar.setText("Cerrar");
        btncerrar.setFocusable(false);
        btncerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncerrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btncerrar);

        btncerrar_todo.setText("Cerrar todo");
        btncerrar_todo.setFocusable(false);
        btncerrar_todo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncerrar_todo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncerrar_todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncerrar_todoActionPerformed(evt);
            }
        });
        jToolBar1.add(btncerrar_todo);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(10, 275));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(100, 106));

        tpnFuentes.setMinimumSize(new java.awt.Dimension(50, 100));
        tpnFuentes.setPreferredSize(new java.awt.Dimension(0, 100));
        tpnFuentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpnFuentesMouseClicked(evt);
            }
        });
        jSplitPane1.setLeftComponent(tpnFuentes);

        tpnSalidas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tpnSalidas.setMinimumSize(new java.awt.Dimension(50, 100));
        jSplitPane1.setRightComponent(tpnSalidas);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jMenuItem1.setText("Debuggear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
    
        int i =jFileChooser1.showSaveDialog(this);
        if (i ==jFileChooser1.CANCEL_OPTION || i ==jFileChooser1.ERROR_OPTION) {
            
        } else {
            File archivo=jFileChooser1.getSelectedFile();
            if(!archivo.exists()){
        Editor=new editor(archivo);
        tpnFuentes.addTab(archivo.getName(), Editor);
        tpnFuentes.setSelectedComponent(Editor);
    }else {
    int op =JOptionPane.showConfirmDialog(this,"El archivo ya existe, Â¿Dese Sobreescribirlo?");
        if (op == JOptionPane.YES_OPTION) {
            Editor=new editor(archivo);
            tpnFuentes.addTab(archivo.getName(), Editor);
            tpnFuentes.setSelectedComponent(Editor);
            String fich = archivo.getAbsolutePath();
        try {
            Editor.crear(fich);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }else if(op==JOptionPane.NO_OPTION || op==JOptionPane.CANCEL_OPTION || op==JOptionPane.CLOSED_OPTION){
            JOptionPane.showMessageDialog(this, "Busque el archivo");
            }
        }
    }

    
    
 
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tbnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnguardarActionPerformed
        if (tpnFuentes.getComponentCount()<=0) {
            
        }else{
        Editor=(editor) tpnFuentes.getSelectedComponent();
        String patron = Editor.archivo.getAbsolutePath();
        try {
            Editor.guardar(patron);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
        
    }//GEN-LAST:event_tbnguardarActionPerformed

    private void btnguardar_todoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardar_todoActionPerformed
     if (tpnFuentes.getComponentCount()<=0) {
            
        }else{
        for(int i = 0; i < tpnFuentes.getComponentCount(); i++) {
            Editor=(editor) tpnFuentes.getComponentAt(i);
            String f = Editor.archivo.getAbsolutePath();
            try {
                Editor.guardar(f);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
     }
    }//GEN-LAST:event_btnguardar_todoActionPerformed

    private void btnguardar_comoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardar_comoActionPerformed
        if (tpnFuentes.getComponentCount()<=0) {
            
        }else{
        jFileChooser1.showSaveDialog(this);  
        File archivo=jFileChooser1.getSelectedFile();
        String fichero = archivo.getAbsolutePath();
        File file = new File(fichero);
        try {
            file.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileReader lector;
        try {
        lector = new FileReader(archivo.getAbsolutePath());
        BufferedReader contenido=new BufferedReader(lector);
        String conte = "";
        conte = contenido.readLine();
        Editor.guardarComo(fichero, conte);
        
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }
    }//GEN-LAST:event_btnguardar_comoActionPerformed

    private void btncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncerrarActionPerformed
        if (tpnFuentes.getComponentCount()<=0) {
            
        }else{
            Editor=(editor) tpnFuentes.getSelectedComponent();
       int opcion= JOptionPane.showConfirmDialog(this, "Desea Guardar?");
        if (opcion == JOptionPane.CANCEL_OPTION || opcion == JOptionPane.CLOSED_OPTION) {
            
        }else{
        if (opcion == JOptionPane.NO_OPTION) {
                        tpnFuentes.remove(Editor);
                    } else if(opcion == JOptionPane.YES_OPTION) {
            try {
                String f = Editor.archivo.getAbsolutePath();
                Editor.guardar(f);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
                        tpnFuentes.remove(Editor);
                    }
        }
        }
        
        
       
        
    }//GEN-LAST:event_btncerrarActionPerformed

    private void btncerrar_todoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncerrar_todoActionPerformed
        // TODO add your handling code here:
        if (tpnFuentes.getComponentCount()<=0) {
            
        }else{
                for(int i = 0; i < tpnFuentes.getComponentCount(); i++) {
                    
                    Editor=(editor) tpnFuentes.getComponentAt(i);
                   // Editor.cerrar();
                    int opcion = JOptionPane.showConfirmDialog(this, "Desea Guardar?");
                    
                if (opcion == JOptionPane.CANCEL_OPTION || opcion == JOptionPane.CLOSED_OPTION) {
            
                }else{
                    if (opcion == JOptionPane.NO_OPTION) {
                        tpnFuentes.remove(Editor);
                    } else if(opcion == JOptionPane.YES_OPTION) {
                        try {
                            String f = Editor.archivo.getAbsolutePath();
                            Editor.guardar(f);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        tpnFuentes.remove(Editor);
                        }
                    }
                    
                }
        }
    }//GEN-LAST:event_btncerrar_todoActionPerformed

    private void btnabrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnabrirActionPerformed
        jFileChooser1.showOpenDialog(this);
        File archivo=jFileChooser1.getSelectedFile();
       String linea = "";
            try {
            BufferedReader contenido=new BufferedReader(new FileReader(archivo));
            String texto = "";
                    while ((linea = contenido.readLine()) != null) {
                         texto += linea+"\n";
                     };
            System.out.println(texto);
            String tab = "";
            String com = "";
           if (tpnFuentes.getComponentCount()>0) {
        for(int i = 0; i != tpnFuentes.getComponentCount(); i++) {
                     Editor=(editor) tpnFuentes.getComponentAt(i);
                     tab = archivo.getName();
                     com = tpnFuentes.getTitleAt(i);
                     if(!tab.equals(com)){
                        n++;
                    }else{
                     n--;
                     } 
                } 
               if (n<tpnFuentes.getComponentCount()) {
                   JOptionPane.showMessageDialog(this, "El archivo ya esta abierto");
               }else if (n==tpnFuentes.getComponentCount()){
                Editor=new editor(archivo);
                        tpnFuentes.addTab(archivo.getName(), Editor);
                        tpnFuentes.setSelectedComponent(Editor);
                        Editor.abrir(texto);
               }
               n = 0;
            }else{
               Editor=new editor(archivo);
               tpnFuentes.addTab(archivo.getName(), Editor);
                tpnFuentes.setSelectedComponent(Editor);
                Editor.abrir(texto);
        }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_btnabrirActionPerformed

    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (tpnSalidas.isEnabled()) {
            tpnSalidas.remove(tpnSalidas.getSelectedComponent());
        }
        Editor=(editor) tpnFuentes.getSelectedComponent();
        String patron = Editor.archivo.getAbsolutePath();
        try {
            Editor=new editor(Editor.archivo);
             Editor.crearDebug();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tpnSalidas.addTab("Salida: " + Editor.archivo.getName(), Editor);
        Editor.txaContenido.setEditable(false);
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void tpnFuentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpnFuentesMouseClicked
    
    }//GEN-LAST:event_tpnFuentesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnabrir;
    private javax.swing.JButton btncerrar;
    private javax.swing.JButton btncerrar_todo;
    private javax.swing.JButton btnguardar_como;
    private javax.swing.JButton btnguardar_todo;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    public javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton tbnguardar;
    private javax.swing.JTabbedPane tpnFuentes;
    private javax.swing.JTabbedPane tpnSalidas;
    // End of variables declaration//GEN-END:variables

 
}
