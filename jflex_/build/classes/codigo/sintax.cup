package codigo;

import java_cup.runtime.Symbol;
import JFlex.sym;
parser code

{:
    private Symbol s;

public void syntax_error(Symbol s){
    this.s = s;
}

public Symbol getS(){
    return this.s;
}
:};

terminal HALT_COMPILER, MENORQ, PREGUNTA_A, P_COMA, IDENTIFIER, MAYORQ, SUMA, RESTA, MULTIPLICA,
OP_LOGICO, OP_RELACIONAL, OP_ATRIBUCION, OP_INCREODEC, OP_BOOL, PARENTESIS_A, PARENTESIS_C, LLAVE_A, LLAVE_C, CORCHETE_A,
CORCHETE_C, COMILLAS, ABSTRACT, AND, ARRAY, AS, BREAK, CALLABLE, CASE, CATCH, CLASS, CLONE, CONST,
CONTINUE, DECLARE, DEFAULT, DIE, ECHO, EMPTY, ELSEIF, ENDDECLARE, ENDFOR, ENDFOREACH, ENDIF, ENDSWITCH, ENDWHILE, EVAL, EXIT, EXTENDS,
FINAL, FINALLY, FUNCTION, GLOBAL, GOTO, IMPLEMENTS, INCLUDE, INCLUDE_ONCE, INSTANCEOF, INSTEADOF, INTERFACE, ISSET, LIST, MATCH,
NAMESPACE, NEW, IF, ELSE, DO, WHILE, FOR, EACH, OR, PRINT, PRIVATE, PROTECTED, PUBLIC, REQUIRE, REQUIRE_ONCE, RETURN,
STATIC, SWITCH, THROW, TRAIT, TRY, UNSET, USE, VAR, VARIABLE, XOR, YIELD, FROM, PHP_I, DECINT, COMA, APOSTROFE, DOSPUNTOS;

non terminal INICIO, SENTENCIA, DECLARACION;

start with INICIO;

INICIO::= MENORQ PREGUNTA_A PHP_I
;
SENTENCIA ::=    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA FOR |
    FOR
;